{"version":3,"sources":["redux/reducers/index.js","redux/reducers/markSpace.js","redux/reducers/reset.js","redux/selectors/getWinningCombination.js","redux/selectors/getIsGameOver.js","redux/selectors/getWinner.js","redux/selectors/getMarkedBy.js","styles/Space.css.js","styles/utils.css.js","components/Space.js","redux/actions/reset.js","redux/actions/markSpace.js","styles/Row.css.js","components/Row.js","styles/App.css.js","components/App.js","styles/index.css.js","redux/configureStore.js","index.js"],"names":["reducers","state","arguments","length","undefined","turns","action","type","position","Object","objectSpread","player","some","turn","concat","toConsumableArray","markSpace","payload","getWinningCombination","positionOne","positionTwo","positionThree","markedSpaces","hasPositionTwo","includes","hasPositionThree","getPlayerWinningCombination","i","winningCombination","createSelector","filter","map","sort","playerOneMarkedSpaces","playerTwoMarkedSpaces","playerOneWinningCombination","playerTwoWinningCombination","hasNoMoreTurns","firstMoveInWinningCombination","parseInt","winningCombinationFirstTurnIndex","findIndex","getMarkedBy","markedBy","positionStyle","css","_templateObject","positionButtonStyle","_templateObject2","markedStyle","_templateObject3","screenReaderOnlyStyle","utils_css_templateObject","Space","_ref","isGameOver","useSelector","getIsGameOver","selectMarkedBy","useMemo","dispatch","useDispatch","core_browser_esm","Space_templateObject","aria-describedby","onClick","e","preventDefault","aria-hidden","fill","xmlns","width","height","viewBox","d","id","positionRowStyle","Row_css_templateObject","Row","positions","components_Space","key","headerStyle","App_css_templateObject","headingTextStyle","App_css_templateObject2","mainStyle","App_css_templateObject3","footerStyle","_templateObject4","winnerStyle","_templateObject5","getWinnerStyleStroke","strokeStyle","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","App","winner","getWinner","headingText","react","App_templateObject","App_templateObject2","join","components_Row","src","title","frameBorder","scrolling","initialState","index_css_templateObject","store","createStore","rootReducer","render","es","styles","indexStyle","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b706c26e.chunk.js","sourcesContent":["import markSpace from './markSpace';\nimport reset from './reset';\n\nexport default (state = { turns: [] }, action) => {\n  switch (action.type) {\n    case 'MARK_SPACE':\n      return markSpace(state, action.payload.position);\n    case 'RESET':\n      return reset();\n    default:\n      return state;\n  }\n};\n","export default (state, position) => {\n  if (state.turns.length === 0) {\n    return {\n      ...state,\n      turns: [{\n        player: 1,\n        position\n      }]\n    };\n  }\n\n  const isMarked = state.turns.some(turn => turn.position === position);\n  if (isMarked) {\n    return state;\n  }\n\n  const newState = {\n    ...state,\n    turns: [\n      ...state.turns,\n      {\n        player: state.turns[state.turns.length - 1].player === 1 ? 2 : 1,\n        position\n      }\n    ]\n  };\n\n  return newState;\n};\n","export default () => ({\n  turns: [],\n});\n","import { createSelector } from 'reselect';\n\nconst getWinningCombination = (positionOne, positionTwo, positionThree, markedSpaces) => {\n  const hasPositionTwo = markedSpaces.includes(positionTwo);\n  const hasPositionThree = markedSpaces.includes(positionThree);\n\n  if (hasPositionTwo && hasPositionThree) {\n    return [\n      positionOne,\n      positionTwo,\n      positionThree\n    ];\n  }\n\n  return null;\n};\n\nconst getPlayerWinningCombination = (markedSpaces) => {\n  for (let i = 0; i < markedSpaces.length; i += 1) {\n    let position = markedSpaces[i];\n\n    // horizontal win\n    if (position === 1 || position === 4 || position === 7) {\n      const winningCombination = getWinningCombination(position, position + 1, position + 2, markedSpaces);\n\n      if (winningCombination) {\n        return winningCombination;\n      }\n    }\n\n    // vertical win\n    if (position === 1 || position === 2 || position === 3) {\n      const winningCombination = getWinningCombination(position, position + 3, position + 6, markedSpaces);\n\n      if (winningCombination) {\n        return winningCombination;\n      }\n    }\n\n    // diagonal (top left to bottom right) win\n    if (position === 1) {\n      const winningCombination = getWinningCombination(position, 5, 9, markedSpaces);\n\n      if (winningCombination) {\n        return winningCombination;\n      }\n    }\n\n    // diagonal (bottom left to top right) win\n    if (position === 3) {\n      const winningCombination = getWinningCombination(position, 5, 7, markedSpaces);\n\n      if (winningCombination) {\n        return winningCombination;\n      }\n    }\n  }\n\n  return null;\n};\n\nconst getPlayerOneMarkedSpaces = state => state.turns\n  .filter(turn => turn.player === 1)\n  .map(turn => turn.position)\n  .sort();\n\nconst getPlayerTwoMarkedSpaces = state => state.turns\n  .filter(turn => turn.player === 2)\n  .map(turn => turn.position)\n  .sort();\n\nexport default createSelector(\n  [getPlayerOneMarkedSpaces, getPlayerTwoMarkedSpaces],\n  (playerOneMarkedSpaces, playerTwoMarkedSpaces) => {\n    const playerOneWinningCombination = getPlayerWinningCombination(playerOneMarkedSpaces);\n    if (playerOneWinningCombination) {\n      return playerOneWinningCombination;\n    }\n\n    const playerTwoWinningCombination = getPlayerWinningCombination(playerTwoMarkedSpaces);\n    if (playerTwoWinningCombination) {\n      return playerTwoWinningCombination;\n    }\n\n    return null;\n  }\n);\n","import { createSelector } from 'reselect';\n\nimport getWinningCombination from './getWinningCombination';\n\nconst getHasNoMoreTurns = state => state.turns.length === 9;\n\nexport default createSelector(\n  [getWinningCombination, getHasNoMoreTurns],\n  (winningCombination, hasNoMoreTurns) => {\n    return winningCombination !== null || hasNoMoreTurns;\n  }\n);\n","import { createSelector } from 'reselect';\n\nimport getWinningCombination from './getWinningCombination';\n\nconst getTurns = state => state.turns;\n\nexport default createSelector(\n  [getWinningCombination, getTurns],\n  (winningCombination, turns) => {\n    if (winningCombination === null) {\n      return null;\n    }\n\n    const firstMoveInWinningCombination = parseInt(winningCombination[0], 10);\n    const winningCombinationFirstTurnIndex = turns.findIndex(turn => turn.position === firstMoveInWinningCombination);\n\n    return turns[winningCombinationFirstTurnIndex].player;\n  }\n);\n","import { createSelector } from 'reselect';\n\nconst getMarkedBy = () => createSelector(\n  state => state.turns,\n  (state, position) => position,\n  (turns, position) => {\n    let markedBy = 0;\n\n    turns.some(turn => {\n      if (turn.position === position) {\n        markedBy = turn.player;\n        return true;\n      }\n\n      return false;\n    });\n\n    return markedBy;\n  }\n);\n\nexport default getMarkedBy;\n","import { css } from '@emotion/core';\n\nexport const positionStyle = css`\n  position: relative;\n  flex: 0 0 120px;\n  height: 120px;\n  vertical-align: middle;\n`;\n\nexport const positionButtonStyle = css`\n  border: 0;\n  width: 100%;\n  height: 100%;\n  border-style: solid;\n  border-color: #211a1e;\n  background-color: #fff;\n`;\n\nexport const markedStyle = css`\n  cursor: not-allowed;\n`;\n","import { css } from '@emotion/core';\n\nexport const screenReaderOnlyStyle = css`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n`;\n","/** @jsx jsx */\nimport { useMemo } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport markSpace from '../redux/actions/markSpace';\nimport reset from '../redux/actions/reset';\n\nimport getIsGameOver from '../redux/selectors/getIsGameOver';\nimport getMarkedBy from '../redux/selectors/getMarkedBy';\n\nimport {\n  positionStyle,\n  positionButtonStyle,\n  markedStyle,\n} from '../styles/Space.css';\n\nimport {\n  screenReaderOnlyStyle\n} from '../styles/utils.css';\n\nconst Space = ({ position }) => {\n  const isGameOver = useSelector(getIsGameOver);\n\n  const selectMarkedBy = useMemo(getMarkedBy, []);\n  const markedBy = useSelector(\n    state => selectMarkedBy(state, position)\n  );\n\n  const dispatch = useDispatch();\n  const handleReset = () => {\n    dispatch(reset());\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    if (isGameOver) {\n      handleReset();\n      return;\n    }\n\n    if (markedBy > 0) {\n      return;\n    }\n\n    dispatch(markSpace(position));\n  };\n\n  return (\n    <li css={positionStyle}>\n      <button\n        css={css`\n          ${positionButtonStyle};\n          ${markedBy > 0 ? markedStyle : ``};\n          ${!(position === 1 || position === 2 || position === 3) ? `border-top-width: 3px;` : ``};\n          ${!(position === 3 || position === 6 || position === 9) ? `border-right-width: 3px;` : ``};\n          ${isGameOver ? `cursor: initial;` : ``};\n        `}\n        type=\"button\"\n        aria-describedby={`position-${position}`}\n        onClick={handleClick}\n      >\n        {markedBy > 0 && (\n          <svg aria-hidden=\"true\" fill={markedBy === 1 ? `#5bc0eb` : `#c3423f`} xmlns=\"http://www.w3.org/2000/svg\" width=\"80\" height=\"80\" viewBox=\"0 0 24 24\">\n            {markedBy === 1 && <path d=\"M23 20.168l-8.185-8.187 8.185-8.174-2.832-2.807-8.182 8.179-8.176-8.179-2.81 2.81 8.186 8.196-8.186 8.184 2.81 2.81 8.203-8.192 8.18 8.192z\" />}\n            {markedBy === 2 && <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12z\" />}\n          </svg>\n        )}\n\n        <span id={`position-${position}`} css={screenReaderOnlyStyle}>\n          Position {position} of 9\n\n          {markedBy > 0 && (\n            <span>, Selected by Player {markedBy}</span>\n          )}\n        </span>\n      </button>\n    </li>\n  );\n}\n\nexport default Space;\n","export default () => ({\n  type: 'RESET'\n});\n","export default (position) => ({\n  type: 'MARK_SPACE',\n  payload: {\n    position\n  }\n});\n","import { css } from '@emotion/core';\n\nexport const positionRowStyle = css`\n  display: flex;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\n\nimport Space from './Space';\n\nimport {\n  positionRowStyle\n} from '../styles/Row.css';\n\nconst Row = ({ positions }) => {\n  return (\n    <ol css={positionRowStyle}>\n      {positions.map(position => {\n        return (\n          <Space\n            key={position}\n            position={position}\n          />\n        );\n      })}\n    </ol>\n  );\n}\n\nexport default Row;\n","import { css } from '@emotion/core'\n\nexport const headerStyle = css`\n  margin-bottom: 40px;\n  text-align: center;\n`;\n\nexport const headingTextStyle = css`\n  color: #5bc0eb;\n`;\n\nexport const mainStyle = css`\n  position: relative;\n  margin: 0 auto 40px;\n  width: 360px;\n`;\n\nexport const footerStyle = css`\n  position: relative;\n  margin: 0 auto;\n  width: 360px;\n  text-align: center;\n`;\n\nconst winnerStyle = css`\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n\n  &::before {\n    position: absolute;\n    background-color: #211a1e;\n    content: '';\n    z-index: 1;\n    animation-name: fadeIn;\n    animation-duration: 400ms;\n    border-radius: 40%;\n  }\n`;\n\nexport const getWinnerStyleStroke = winningCombination => {\n  let strokeStyle = ``;\n\n  switch (winningCombination) {\n    case '123':\n      strokeStyle = css`\n        ${winnerStyle};\n        &::before {\n          top: 15%;\n          left: 0;\n          width: 100%;\n          height: 10px;\n        }\n      `;\n      break;\n    case '147':\n      strokeStyle = css`\n        ${winnerStyle};\n        &::before {\n          top: 0;\n          left: 14%;\n          width: 10px;\n          height: 100%;\n        }\n      `;\n      break;\n    case '159':\n      strokeStyle = css`\n        ${winnerStyle};\n        &::before {\n          top: -19%;\n          right: 49%;\n          width: 10px;\n          height: 500px;\n          transform: rotate(-45deg);\n        }\n      `;\n      break;\n    case '258':\n      strokeStyle = css`\n        ${winnerStyle};\n        &::before {\n          top: 0;\n          left: 48%;\n          width: 10px;\n          height: 100%;\n        }\n      `;\n      break;\n    case '357':\n      strokeStyle = css`\n        ${winnerStyle};\n        &::before {\n          top: -19%;\n          left: 48%;\n          width: 10px;\n          height: 138%;\n          transform: rotate(45deg);\n        }\n      `;\n      break;\n    case '369':\n      strokeStyle = css`\n        ${winnerStyle};\n        &::before {\n          top: 0;\n          right: 15.3%;\n          width: 10px;\n          height: 100%;\n        }\n      `;\n      break;\n    case '456':\n      strokeStyle = css`\n        ${winnerStyle};\n        &::before {\n          top: 50%;\n          left: 0;\n          width: 100%;\n          height: 10px;\n        }\n      `;\n      break;\n    case '789':\n      strokeStyle = css`\n        ${winnerStyle};\n        &::before {\n          top: 82%;\n          left: 0;\n          width: 100%;\n          height: 10px;\n        }\n      `;\n      break;\n    default:\n      break;\n  }\n\n  return css`\n    ${winnerStyle};\n    ${strokeStyle};\n  `;\n};\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport getIsGameOver from '../redux/selectors/getIsGameOver';\nimport getWinner from '../redux/selectors/getWinner';\nimport getWinningCombination from '../redux/selectors/getWinningCombination';\n\nimport Row from './Row';\n\nimport {\n  headerStyle,\n  headingTextStyle,\n  mainStyle,\n  footerStyle,\n  getWinnerStyleStroke\n} from '../styles/App.css';\n\nconst App = () => {\n  const isGameOver = useSelector(getIsGameOver);\n  const winner = useSelector(getWinner);\n  const winningCombination = useSelector(getWinningCombination);\n\n  let headingText = 'Click to play.';\n  if (isGameOver) {\n    if (winner === null) {\n      headingText = 'Draw. Click to play again.';\n    } else {\n      headingText = `Player ${winner} wins. Click to play again.`\n    }\n  }\n\n  return (\n    <Fragment>\n      <header css={headerStyle}>\n        <h1>Tic Tac Toe</h1>\n        <h2 css={css`\n          ${headingTextStyle};\n          ${winner === 2 ? `color: #c3423f;` : ``}\n        `}>\n          {headingText}\n        </h2>\n      </header>\n\n      <main css={css`\n        ${mainStyle};\n        ${winningCombination !== null ? getWinnerStyleStroke(winningCombination.join('')) : ``};\n      `}>\n        <Row positions={[1, 2, 3]} />\n        <Row positions={[4, 5, 6]} />\n        <Row positions={[7, 8, 9]} />\n      </main>\n\n      <footer css={footerStyle}>\n        <iframe\n          src=\"https://ghbtns.com/github-btn.html?user=alebelcor&repo=react-tic-tac-toe&type=star&count=false\"\n          title=\"Star this repository on GitHub\"\n          frameBorder=\"0\"\n          scrolling=\"0\"\n          width=\"55\"\n          height=\"20\"\n        ></iframe>\n      </footer>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { css } from '@emotion/core';\n\nimport 'sanitize.css';\n\nexport default css`\n  html {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    color: #211a1e;\n  }\n`;\n","import { createStore } from 'redux';\n\nimport rootReducer from './reducers';\n\nexport default (initialState) => {\n  return createStore(\n    rootReducer,\n    initialState,\n  );\n}\n","/** @jsx jsx */\nimport { jsx, Global } from '@emotion/core'\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './redux/configureStore';\n\nimport App from './components/App';\n\nimport indexStyle from './styles/index.css';\n\nconst store = configureStore({\n  turns: [],\n});\n\nrender(\n  <Provider store={store}>\n    <Global styles={indexStyle} />\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}